//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EServicesCms.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MOFPortalEntities : DbContext
    {
        public MOFPortalEntities()
            : base("name=MOFPortalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Captcha> Captchas { get; set; }
        public virtual DbSet<Logger> Loggers { get; set; }
        public virtual DbSet<RequestAndEnquiriesDetailsLog> RequestAndEnquiriesDetailsLogs { get; set; }
        public virtual DbSet<RequestsAndEnquiriesLog> RequestsAndEnquiriesLogs { get; set; }
        public virtual DbSet<VersionHistory> VersionHistories { get; set; }
        public virtual DbSet<LkAction> LkActions { get; set; }
        public virtual DbSet<LkCountry> LkCountries { get; set; }
        public virtual DbSet<LkEmirate> LkEmirates { get; set; }
        public virtual DbSet<LkGroup> LkGroups { get; set; }
        public virtual DbSet<LkInputType> LkInputTypes { get; set; }
        public virtual DbSet<LkInquiryType> LkInquiryTypes { get; set; }
        public virtual DbSet<LkLookup> LkLookups { get; set; }
        public virtual DbSet<LkPersonType> LkPersonTypes { get; set; }
        public virtual DbSet<LoginAudit> LoginAudits { get; set; }
        public virtual DbSet<LkUserAttributesSSO> LkUserAttributesSSOes { get; set; }
        public virtual DbSet<LkInputLanguage> LkInputLanguages { get; set; }
        public virtual DbSet<RequestRedirection> RequestRedirections { get; set; }
        public virtual DbSet<LkLogicalOperator> LkLogicalOperators { get; set; }
        public virtual DbSet<API_Sources> API_Sources { get; set; }
        public virtual DbSet<TokenClientKey> TokenClientKeys { get; set; }
        public virtual DbSet<TokenCompany> TokenCompanies { get; set; }
        public virtual DbSet<TokenManager> TokenManagers { get; set; }
        public virtual DbSet<TokenUser> TokenUsers { get; set; }
        public virtual DbSet<ServiceFormsDrilldownConfig> ServiceFormsDrilldownConfigs { get; set; }
        public virtual DbSet<ServiceInputLookupAction> ServiceInputLookupActions { get; set; }
        public virtual DbSet<ServiceInputTooltip> ServiceInputTooltips { get; set; }
        public virtual DbSet<Attachment> Attachments { get; set; }
        public virtual DbSet<EmailNotification> EmailNotifications { get; set; }
        public virtual DbSet<LookupOption> LookupOptions { get; set; }
        public virtual DbSet<LookupOptions_Log> LookupOptions_Log { get; set; }
        public virtual DbSet<ServiceInputLookupActions_Log> ServiceInputLookupActions_Log { get; set; }
        public virtual DbSet<ServiceGuideHintAction> ServiceGuideHintActions { get; set; }
        public virtual DbSet<ServiceGuideHint> ServiceGuideHints { get; set; }
        public virtual DbSet<LkServiceGuideHintType> LkServiceGuideHintTypes { get; set; }
        public virtual DbSet<ServiceGuide> ServiceGuides { get; set; }
        public virtual DbSet<ServiceGuideFaq> ServiceGuideFaqs { get; set; }
        public virtual DbSet<ServiceGuideVideo> ServiceGuideVideos { get; set; }
        public virtual DbSet<ServiceGuideProcedure> ServiceGuideProcedures { get; set; }
        public virtual DbSet<UserActivityLogging> UserActivityLoggings { get; set; }
        public virtual DbSet<LkMenu> LkMenus { get; set; }
        public virtual DbSet<ServiceGuideRating> ServiceGuideRatings { get; set; }
        public virtual DbSet<ServiceType> ServiceTypes { get; set; }
        public virtual DbSet<RoleGroup> RoleGroups { get; set; }
        public virtual DbSet<RequestAndEnquiriesDetail> RequestAndEnquiriesDetails { get; set; }
        public virtual DbSet<ServiceFormsDrilldownConfig_Log> ServiceFormsDrilldownConfig_Log { get; set; }
        public virtual DbSet<UserScreenAction> UserScreenActions { get; set; }
        public virtual DbSet<LkLookups_Log> LkLookups_Log { get; set; }
        public virtual DbSet<ServiceInputTooltips_Log> ServiceInputTooltips_Log { get; set; }
        public virtual DbSet<UserFavouriteService> UserFavouriteServices { get; set; }
        public virtual DbSet<AItemDetail> AItemDetails { get; set; }
        public virtual DbSet<AItem> AItems { get; set; }
        public virtual DbSet<LkScreenLabel> LkScreenLabels { get; set; }
        public virtual DbSet<LkScreen> LkScreens { get; set; }
        public virtual DbSet<LkScreenValidationMessage> LkScreenValidationMessages { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<LkRole> LkRoles { get; set; }
        public virtual DbSet<HitCounter> HitCounters { get; set; }
        public virtual DbSet<ServiceEntity> ServiceEntities { get; set; }
        public virtual DbSet<ServiceGuideSupport> ServiceGuideSupports { get; set; }
        public virtual DbSet<vLookupOption> vLookupOptions { get; set; }
        public virtual DbSet<ServiceGuideChannel> ServiceGuideChannels { get; set; }
        public virtual DbSet<ServiceGuideSurveyQuery> ServiceGuideSurveyQueries { get; set; }
        public virtual DbSet<ServiceGuideSurveyQueryOption> ServiceGuideSurveyQueryOptions { get; set; }
        public virtual DbSet<ServiceGuideSurveyRespons> ServiceGuideSurveyResponses { get; set; }
        public virtual DbSet<UserAuthDetail> UserAuthDetails { get; set; }
        public virtual DbSet<ServiceAudience> ServiceAudiences { get; set; }
        public virtual DbSet<ServiceCardEntity> ServiceCardEntities { get; set; }
        public virtual DbSet<ServiceCategories_Log> ServiceCategories_Log { get; set; }
        public virtual DbSet<ServiceChannel> ServiceChannels { get; set; }
        public virtual DbSet<ServiceCommentsAttachmentsConfig> ServiceCommentsAttachmentsConfigs { get; set; }
        public virtual DbSet<ServiceCommentsAttachmentsConfig_Log> ServiceCommentsAttachmentsConfig_Log { get; set; }
        public virtual DbSet<ServiceCondition> ServiceConditions { get; set; }
        public virtual DbSet<ServiceContact> ServiceContacts { get; set; }
        public virtual DbSet<ServiceDepartment> ServiceDepartments { get; set; }
        public virtual DbSet<ServiceDocument> ServiceDocuments { get; set; }
        public virtual DbSet<ServiceDuration> ServiceDurations { get; set; }
        public virtual DbSet<ServiceEntitiesMapping> ServiceEntitiesMappings { get; set; }
        public virtual DbSet<ServiceFee> ServiceFees { get; set; }
        public virtual DbSet<ServiceFormsConfig> ServiceFormsConfigs { get; set; }
        public virtual DbSet<ServiceFormsConfig_Log> ServiceFormsConfig_Log { get; set; }
        public virtual DbSet<ServiceLocation> ServiceLocations { get; set; }
        public virtual DbSet<ServiceProcedure> ServiceProcedures { get; set; }
        public virtual DbSet<ServiceRating> ServiceRatings { get; set; }
        public virtual DbSet<ServiceResponsibleOfficer> ServiceResponsibleOfficers { get; set; }
        public virtual DbSet<Services_Log> Services_Log { get; set; }
        public virtual DbSet<ServiceTab> ServiceTabs { get; set; }
        public virtual DbSet<ServiceTabs_Log> ServiceTabs_Log { get; set; }
        public virtual DbSet<ServiceTemplate> ServiceTemplates { get; set; }
        public virtual DbSet<ServiceTemplates_Log> ServiceTemplates_Log { get; set; }
        public virtual DbSet<ServiceUserType> ServiceUserTypes { get; set; }
        public virtual DbSet<ServiceViewer> ServiceViewers { get; set; }
        public virtual DbSet<ServiceViewers_Log> ServiceViewers_Log { get; set; }
        public virtual DbSet<ServiceRequirement> ServiceRequirements { get; set; }
        public virtual DbSet<ServiceFaq> ServiceFaqs { get; set; }
        public virtual DbSet<ServiceVideo> ServiceVideos { get; set; }
        public virtual DbSet<ServiceVideos_Log> ServiceVideos_Log { get; set; }
        public virtual DbSet<RequestsAndEnquiry> RequestsAndEnquiries { get; set; }
        public virtual DbSet<ServiceCategory> ServiceCategories { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<LkRequestStatu> LkRequestStatus { get; set; }
        public virtual DbSet<NoActionUserActivity> NoActionUserActivities { get; set; }
        public virtual DbSet<NoActionUser> NoActionUsers { get; set; }
        public virtual DbSet<ServiceTemplatesData> ServiceTemplatesDatas { get; set; }
    
        public virtual int ES_DeleteCaptcha(string captchaKey, string captchText)
        {
            var captchaKeyParameter = captchaKey != null ?
                new ObjectParameter("CaptchaKey", captchaKey) :
                new ObjectParameter("CaptchaKey", typeof(string));
    
            var captchTextParameter = captchText != null ?
                new ObjectParameter("CaptchText", captchText) :
                new ObjectParameter("CaptchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteCaptcha", captchaKeyParameter, captchTextParameter);
        }
    
        public virtual int ES_DeleteRequestsAndEnquiries(string requestId, string rowUpdatedBy, string ipAddress)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            var rowUpdatedByParameter = rowUpdatedBy != null ?
                new ObjectParameter("RowUpdatedBy", rowUpdatedBy) :
                new ObjectParameter("RowUpdatedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteRequestsAndEnquiries", requestIdParameter, rowUpdatedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_DeleteUserAuthDetails(string jwtoken)
        {
            var jwtokenParameter = jwtoken != null ?
                new ObjectParameter("jwtoken", jwtoken) :
                new ObjectParameter("jwtoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteUserAuthDetails", jwtokenParameter);
        }
    
        public virtual int ES_DeleteUserFavouriteService(string userId, Nullable<int> serviceId, string rowUpdatedBy, string ipAddress)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var rowUpdatedByParameter = rowUpdatedBy != null ?
                new ObjectParameter("RowUpdatedBy", rowUpdatedBy) :
                new ObjectParameter("RowUpdatedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteUserFavouriteService", userIdParameter, serviceIdParameter, rowUpdatedByParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<ES_GetAttachments_Result> ES_GetAttachments(string requestId)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetAttachments_Result>("ES_GetAttachments", requestIdParameter);
        }
    
        public virtual int ES_GetDashboardStatistics(string userId, Nullable<int> year, Nullable<int> month, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_GetDashboardStatistics", userIdParameter, yearParameter, monthParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ES_GetDashboardStatisticsByMonth_Result> ES_GetDashboardStatisticsByMonth(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetDashboardStatisticsByMonth_Result>("ES_GetDashboardStatisticsByMonth", userIdParameter);
        }
    
        public virtual ObjectResult<ES_GetDashboardStatisticsByServices_Result> ES_GetDashboardStatisticsByServices(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetDashboardStatisticsByServices_Result>("ES_GetDashboardStatisticsByServices", userIdParameter);
        }
    
        public virtual int ES_GetEmailNotifications(string requestId)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_GetEmailNotifications", requestIdParameter);
        }
    
        public virtual ObjectResult<ES_GetLkActions_Result> ES_GetLkActions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkActions_Result>("ES_GetLkActions");
        }
    
        public virtual ObjectResult<ES_GetLkCountry_Result> ES_GetLkCountry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkCountry_Result>("ES_GetLkCountry");
        }
    
        public virtual ObjectResult<ES_GetLkEmirates_Result> ES_GetLkEmirates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkEmirates_Result>("ES_GetLkEmirates");
        }
    
        public virtual ObjectResult<ES_GetLkInquiryTypes_Result> ES_GetLkInquiryTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkInquiryTypes_Result>("ES_GetLkInquiryTypes");
        }
    
        public virtual ObjectResult<ES_GetLkPersonTypes_Result> ES_GetLkPersonTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkPersonTypes_Result>("ES_GetLkPersonTypes");
        }
    
        public virtual ObjectResult<ES_GetLkRequestStatus_Result> ES_GetLkRequestStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkRequestStatus_Result>("ES_GetLkRequestStatus");
        }
    
        public virtual int ES_GetLkScreenLabels(Nullable<int> screenId)
        {
            var screenIdParameter = screenId.HasValue ?
                new ObjectParameter("ScreenId", screenId) :
                new ObjectParameter("ScreenId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_GetLkScreenLabels", screenIdParameter);
        }
    
        public virtual int ES_GetLkScreens()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_GetLkScreens");
        }
    
        public virtual ObjectResult<ES_GetLookupOptions_Result> ES_GetLookupOptions(Nullable<int> lookupId, string lookupName)
        {
            var lookupIdParameter = lookupId.HasValue ?
                new ObjectParameter("LookupId", lookupId) :
                new ObjectParameter("LookupId", typeof(int));
    
            var lookupNameParameter = lookupName != null ?
                new ObjectParameter("LookupName", lookupName) :
                new ObjectParameter("LookupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLookupOptions_Result>("ES_GetLookupOptions", lookupIdParameter, lookupNameParameter);
        }
    
        public virtual ObjectResult<ES_GetRequestsAndEnquiriesDetails_Result> ES_GetRequestsAndEnquiriesDetails(string requestId)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetRequestsAndEnquiriesDetails_Result>("ES_GetRequestsAndEnquiriesDetails", requestIdParameter);
        }
    
        public virtual ObjectResult<ES_GetRequestsAndEnquiriesRecord_Result> ES_GetRequestsAndEnquiriesRecord(string requestId, string status)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetRequestsAndEnquiriesRecord_Result>("ES_GetRequestsAndEnquiriesRecord", requestIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<ES_GetUserFavouriteService_Result> ES_GetUserFavouriteService(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetUserFavouriteService_Result>("ES_GetUserFavouriteService", userIdParameter);
        }
    
        public virtual ObjectResult<ES_GetUserRequestsAndEnquiriesList_Result> ES_GetUserRequestsAndEnquiriesList(string userId, Nullable<int> serviceId, Nullable<int> categoryId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderBy, string orderByDir, string searchCri, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var orderByDirParameter = orderByDir != null ?
                new ObjectParameter("OrderByDir", orderByDir) :
                new ObjectParameter("OrderByDir", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetUserRequestsAndEnquiriesList_Result>("ES_GetUserRequestsAndEnquiriesList", userIdParameter, serviceIdParameter, categoryIdParameter, pageNumberParameter, pageSizeParameter, orderByParameter, orderByDirParameter, searchCriParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<string> ES_GetVersion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ES_GetVersion");
        }
    
        public virtual int ES_InsertAttachment(Nullable<long> requestUniqueId, string fileName, string fileType, Nullable<int> fileSize, string fileUrl, string rowInsertedBy, string ipAddress)
        {
            var requestUniqueIdParameter = requestUniqueId.HasValue ?
                new ObjectParameter("RequestUniqueId", requestUniqueId) :
                new ObjectParameter("RequestUniqueId", typeof(long));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var fileTypeParameter = fileType != null ?
                new ObjectParameter("FileType", fileType) :
                new ObjectParameter("FileType", typeof(string));
    
            var fileSizeParameter = fileSize.HasValue ?
                new ObjectParameter("FileSize", fileSize) :
                new ObjectParameter("FileSize", typeof(int));
    
            var fileUrlParameter = fileUrl != null ?
                new ObjectParameter("FileUrl", fileUrl) :
                new ObjectParameter("FileUrl", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertAttachment", requestUniqueIdParameter, fileNameParameter, fileTypeParameter, fileSizeParameter, fileUrlParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_InsertEmailNotifications(Nullable<long> requestUniqueId, string emailFrom, string emailTo, string subject, string body, Nullable<int> statusId, string remarks, string attachmentPath, string rowInsertedBy, string ipAddress)
        {
            var requestUniqueIdParameter = requestUniqueId.HasValue ?
                new ObjectParameter("RequestUniqueId", requestUniqueId) :
                new ObjectParameter("RequestUniqueId", typeof(long));
    
            var emailFromParameter = emailFrom != null ?
                new ObjectParameter("EmailFrom", emailFrom) :
                new ObjectParameter("EmailFrom", typeof(string));
    
            var emailToParameter = emailTo != null ?
                new ObjectParameter("EmailTo", emailTo) :
                new ObjectParameter("EmailTo", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var attachmentPathParameter = attachmentPath != null ?
                new ObjectParameter("AttachmentPath", attachmentPath) :
                new ObjectParameter("AttachmentPath", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertEmailNotifications", requestUniqueIdParameter, emailFromParameter, emailToParameter, subjectParameter, bodyParameter, statusIdParameter, remarksParameter, attachmentPathParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_InsertLoginAudit(string userId, Nullable<decimal> latitude, Nullable<decimal> longitude, string country, string rowInsertedBy, string ipAddress)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(decimal));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertLoginAudit", userIdParameter, latitudeParameter, longitudeParameter, countryParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> ES_InsertRequestsAndEnquiries(string requestId, string userId, Nullable<int> statusId, string externalServiceID, Nullable<int> categoryId, string previousRequestId, string remarks, string requestDetails, string rowInsertedBy, string ipAddress, Nullable<int> serviceId, ObjectParameter uniqueId)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var previousRequestIdParameter = previousRequestId != null ?
                new ObjectParameter("PreviousRequestId", previousRequestId) :
                new ObjectParameter("PreviousRequestId", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var requestDetailsParameter = requestDetails != null ?
                new ObjectParameter("RequestDetails", requestDetails) :
                new ObjectParameter("RequestDetails", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("ES_InsertRequestsAndEnquiries", requestIdParameter, userIdParameter, statusIdParameter, externalServiceIDParameter, categoryIdParameter, previousRequestIdParameter, remarksParameter, requestDetailsParameter, rowInsertedByParameter, ipAddressParameter, serviceIdParameter, uniqueId);
        }
    
        public virtual int ES_InsertUserAuthDetails(string username, string useremail, string userdisplayname, string mobile, string token, string jwtoken, string responseToId, string samlResponse, Nullable<System.DateTime> tokenExpiry, string ipAddress, string nameId, string userType, string loginType, string nationality, string userAttributes)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var useremailParameter = useremail != null ?
                new ObjectParameter("useremail", useremail) :
                new ObjectParameter("useremail", typeof(string));
    
            var userdisplaynameParameter = userdisplayname != null ?
                new ObjectParameter("userdisplayname", userdisplayname) :
                new ObjectParameter("userdisplayname", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var jwtokenParameter = jwtoken != null ?
                new ObjectParameter("jwtoken", jwtoken) :
                new ObjectParameter("jwtoken", typeof(string));
    
            var responseToIdParameter = responseToId != null ?
                new ObjectParameter("responseToId", responseToId) :
                new ObjectParameter("responseToId", typeof(string));
    
            var samlResponseParameter = samlResponse != null ?
                new ObjectParameter("samlResponse", samlResponse) :
                new ObjectParameter("samlResponse", typeof(string));
    
            var tokenExpiryParameter = tokenExpiry.HasValue ?
                new ObjectParameter("tokenExpiry", tokenExpiry) :
                new ObjectParameter("tokenExpiry", typeof(System.DateTime));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("ipAddress", ipAddress) :
                new ObjectParameter("ipAddress", typeof(string));
    
            var nameIdParameter = nameId != null ?
                new ObjectParameter("nameId", nameId) :
                new ObjectParameter("nameId", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            var loginTypeParameter = loginType != null ?
                new ObjectParameter("loginType", loginType) :
                new ObjectParameter("loginType", typeof(string));
    
            var nationalityParameter = nationality != null ?
                new ObjectParameter("nationality", nationality) :
                new ObjectParameter("nationality", typeof(string));
    
            var userAttributesParameter = userAttributes != null ?
                new ObjectParameter("userAttributes", userAttributes) :
                new ObjectParameter("userAttributes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertUserAuthDetails", usernameParameter, useremailParameter, userdisplaynameParameter, mobileParameter, tokenParameter, jwtokenParameter, responseToIdParameter, samlResponseParameter, tokenExpiryParameter, ipAddressParameter, nameIdParameter, userTypeParameter, loginTypeParameter, nationalityParameter, userAttributesParameter);
        }
    
        public virtual int ES_InsertUserFavouriteService(string userId, Nullable<int> serviceId, string ipAddress)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertUserFavouriteService", userIdParameter, serviceIdParameter, ipAddressParameter);
        }
    
        public virtual int ES_InsertUserScreenAction(Nullable<int> actionId, Nullable<int> serviceId, Nullable<int> categoryId, string uniqueId, string remarks, string rowInsertedBy, string ipAddress)
        {
            var actionIdParameter = actionId.HasValue ?
                new ObjectParameter("ActionId", actionId) :
                new ObjectParameter("ActionId", typeof(int));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var uniqueIdParameter = uniqueId != null ?
                new ObjectParameter("UniqueId", uniqueId) :
                new ObjectParameter("UniqueId", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertUserScreenAction", actionIdParameter, serviceIdParameter, categoryIdParameter, uniqueIdParameter, remarksParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_LogCaptcha(string captchaKey, string captchText, string rowInsertedBy, string ipAddress)
        {
            var captchaKeyParameter = captchaKey != null ?
                new ObjectParameter("CaptchaKey", captchaKey) :
                new ObjectParameter("CaptchaKey", typeof(string));
    
            var captchTextParameter = captchText != null ?
                new ObjectParameter("CaptchText", captchText) :
                new ObjectParameter("CaptchText", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_LogCaptcha", captchaKeyParameter, captchTextParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_Logger(string applicationName, string versionNo, string message, string className, string innerException, string stackTraceString, Nullable<int> remoteStackIndex, string exceptionMethod, Nullable<int> hResult, string source, string helpURL, string rowInsertedBy, string ipAddress)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var versionNoParameter = versionNo != null ?
                new ObjectParameter("VersionNo", versionNo) :
                new ObjectParameter("VersionNo", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var classNameParameter = className != null ?
                new ObjectParameter("ClassName", className) :
                new ObjectParameter("ClassName", typeof(string));
    
            var innerExceptionParameter = innerException != null ?
                new ObjectParameter("InnerException", innerException) :
                new ObjectParameter("InnerException", typeof(string));
    
            var stackTraceStringParameter = stackTraceString != null ?
                new ObjectParameter("StackTraceString", stackTraceString) :
                new ObjectParameter("StackTraceString", typeof(string));
    
            var remoteStackIndexParameter = remoteStackIndex.HasValue ?
                new ObjectParameter("RemoteStackIndex", remoteStackIndex) :
                new ObjectParameter("RemoteStackIndex", typeof(int));
    
            var exceptionMethodParameter = exceptionMethod != null ?
                new ObjectParameter("ExceptionMethod", exceptionMethod) :
                new ObjectParameter("ExceptionMethod", typeof(string));
    
            var hResultParameter = hResult.HasValue ?
                new ObjectParameter("HResult", hResult) :
                new ObjectParameter("HResult", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var helpURLParameter = helpURL != null ?
                new ObjectParameter("HelpURL", helpURL) :
                new ObjectParameter("HelpURL", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_Logger", applicationNameParameter, versionNoParameter, messageParameter, classNameParameter, innerExceptionParameter, stackTraceStringParameter, remoteStackIndexParameter, exceptionMethodParameter, hResultParameter, sourceParameter, helpURLParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_RateService(string userId, string externalServiceID, Nullable<int> rate, string rowInsertedBy, string ipAddress)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_RateService", userIdParameter, externalServiceIDParameter, rateParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<ES_StillLoggedIn_Result> ES_StillLoggedIn(string username, string ipAddress)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("ipAddress", ipAddress) :
                new ObjectParameter("ipAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_StillLoggedIn_Result>("ES_StillLoggedIn", usernameParameter, ipAddressParameter);
        }
    
        public virtual int ES_UpdateRequestsAndEnquiries(string requestId, string userId, Nullable<int> statusId, Nullable<int> serviceId, Nullable<int> categoryId, Nullable<long> previousRequestId, string remarks, string requestDetails, string rowUpdatedBy, string ipAddress)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var previousRequestIdParameter = previousRequestId.HasValue ?
                new ObjectParameter("PreviousRequestId", previousRequestId) :
                new ObjectParameter("PreviousRequestId", typeof(long));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var requestDetailsParameter = requestDetails != null ?
                new ObjectParameter("RequestDetails", requestDetails) :
                new ObjectParameter("RequestDetails", typeof(string));
    
            var rowUpdatedByParameter = rowUpdatedBy != null ?
                new ObjectParameter("RowUpdatedBy", rowUpdatedBy) :
                new ObjectParameter("RowUpdatedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_UpdateRequestsAndEnquiries", requestIdParameter, userIdParameter, statusIdParameter, serviceIdParameter, categoryIdParameter, previousRequestIdParameter, remarksParameter, requestDetailsParameter, rowUpdatedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_UpdateRequestsAndEnquiriesStatus(string requestId, string status, string remarks, string userId, string ipAddress)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_UpdateRequestsAndEnquiriesStatus", requestIdParameter, statusParameter, remarksParameter, userIdParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> ES_VerifyCaptcha(string captchaKey, string captchText)
        {
            var captchaKeyParameter = captchaKey != null ?
                new ObjectParameter("CaptchaKey", captchaKey) :
                new ObjectParameter("CaptchaKey", typeof(string));
    
            var captchTextParameter = captchText != null ?
                new ObjectParameter("CaptchText", captchText) :
                new ObjectParameter("CaptchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("ES_VerifyCaptcha", captchaKeyParameter, captchTextParameter);
        }
    
        public virtual ObjectResult<ES_GetLogger_Result> ES_GetLogger(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderBy, string orderByDir, string searchCri, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var orderByDirParameter = orderByDir != null ?
                new ObjectParameter("OrderByDir", orderByDir) :
                new ObjectParameter("OrderByDir", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLogger_Result>("ES_GetLogger", pageNumberParameter, pageSizeParameter, orderByParameter, orderByDirParameter, searchCriParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ES_GeRequestsAndEnquiriesList_Result> ES_GeRequestsAndEnquiriesList(Nullable<int> statusId, Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderBy, string orderByDir, string searchCri, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> departmentId)
        {
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var orderByDirParameter = orderByDir != null ?
                new ObjectParameter("OrderByDir", orderByDir) :
                new ObjectParameter("OrderByDir", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GeRequestsAndEnquiriesList_Result>("ES_GeRequestsAndEnquiriesList", statusIdParameter, pageNumberParameter, pageSizeParameter, orderByParameter, orderByDirParameter, searchCriParameter, fromDateParameter, toDateParameter, departmentIdParameter);
        }
    
        public virtual int create_insert(string schema, string table, string where, Nullable<int> top, ObjectParameter insert)
        {
            var schemaParameter = schema != null ?
                new ObjectParameter("schema", schema) :
                new ObjectParameter("schema", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            var topParameter = top.HasValue ?
                new ObjectParameter("top", top) :
                new ObjectParameter("top", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("create_insert", schemaParameter, tableParameter, whereParameter, topParameter, insert);
        }
    
        public virtual ObjectResult<Nullable<int>> ES_AuthenticateCredentials(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ES_AuthenticateCredentials", userNameParameter, passwordParameter);
        }
    
        public virtual int ES_DeleteRequestsAndEnquiries1(string requestId, string rowUpdatedBy, string ipAddress)
        {
            var requestIdParameter = requestId != null ?
                new ObjectParameter("RequestId", requestId) :
                new ObjectParameter("RequestId", typeof(string));
    
            var rowUpdatedByParameter = rowUpdatedBy != null ?
                new ObjectParameter("RowUpdatedBy", rowUpdatedBy) :
                new ObjectParameter("RowUpdatedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteRequestsAndEnquiries1", requestIdParameter, rowUpdatedByParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<ES_GetExistingToken_Result> ES_GetExistingToken(Nullable<int> companyID, Nullable<int> userID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetExistingToken_Result>("ES_GetExistingToken", companyIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<ES_GetLkLookups_Result> ES_GetLkLookups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkLookups_Result>("ES_GetLkLookups");
        }
    
        public virtual ObjectResult<ES_GetRequestRedirection_Result> ES_GetRequestRedirection(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetRequestRedirection_Result>("ES_GetRequestRedirection", userIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceApiSource_Result> ES_GetServiceApiSource(Nullable<int> sourceId)
        {
            var sourceIdParameter = sourceId.HasValue ?
                new ObjectParameter("SourceId", sourceId) :
                new ObjectParameter("SourceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceApiSource_Result>("ES_GetServiceApiSource", sourceIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceCommentsAttachmentConfiguration_Result> ES_GetServiceCommentsAttachmentConfiguration(string externalServiceID)
        {
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceCommentsAttachmentConfiguration_Result>("ES_GetServiceCommentsAttachmentConfiguration", externalServiceIDParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceControlDrillDown_Result> ES_GetServiceControlDrillDown(Nullable<int> inputId, string inputControlId)
        {
            var inputIdParameter = inputId.HasValue ?
                new ObjectParameter("InputId", inputId) :
                new ObjectParameter("InputId", typeof(int));
    
            var inputControlIdParameter = inputControlId != null ?
                new ObjectParameter("InputControlId", inputControlId) :
                new ObjectParameter("InputControlId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceControlDrillDown_Result>("ES_GetServiceControlDrillDown", inputIdParameter, inputControlIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceInputLookupActions_Result> ES_GetServiceInputLookupActions(Nullable<int> inputId, string inputControlId)
        {
            var inputIdParameter = inputId.HasValue ?
                new ObjectParameter("InputId", inputId) :
                new ObjectParameter("InputId", typeof(int));
    
            var inputControlIdParameter = inputControlId != null ?
                new ObjectParameter("InputControlId", inputControlId) :
                new ObjectParameter("InputControlId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceInputLookupActions_Result>("ES_GetServiceInputLookupActions", inputIdParameter, inputControlIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceInputTooltips_Result> ES_GetServiceInputTooltips(Nullable<int> inputId, string inputControlId)
        {
            var inputIdParameter = inputId.HasValue ?
                new ObjectParameter("InputId", inputId) :
                new ObjectParameter("InputId", typeof(int));
    
            var inputControlIdParameter = inputControlId != null ?
                new ObjectParameter("InputControlId", inputControlId) :
                new ObjectParameter("InputControlId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceInputTooltips_Result>("ES_GetServiceInputTooltips", inputIdParameter, inputControlIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceTabs_Result> ES_GetServiceTabs(Nullable<int> serviceId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceTabs_Result>("ES_GetServiceTabs", serviceIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceTemplates_Result> ES_GetServiceTemplates(Nullable<int> serviceId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceTemplates_Result>("ES_GetServiceTemplates", serviceIdParameter);
        }
    
        public virtual ObjectResult<string> ES_GetServiceViewers(Nullable<int> serviceId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ES_GetServiceViewers", serviceIdParameter);
        }
    
        public virtual ObjectResult<ES_GetTokenClientKey_Result> ES_GetTokenClientKey(string clientID, Nullable<int> companyID, Nullable<int> userID)
        {
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetTokenClientKey_Result>("ES_GetTokenClientKey", clientIDParameter, companyIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ES_IsTokenAlreadyExists(Nullable<int> companyID, Nullable<int> userID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ES_IsTokenAlreadyExists", companyIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ES_IsTokenAlreadyExpired(Nullable<int> companyID, Nullable<int> userID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ES_IsTokenAlreadyExpired", companyIDParameter, userIDParameter);
        }
    
        public virtual int ES_LogRequestRedirection(string caseId, string userId, string rowInsertedBy, string ipAddress)
        {
            var caseIdParameter = caseId != null ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(string));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_LogRequestRedirection", caseIdParameter, userIdParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_LogToken(string tokenKey, Nullable<int> companyID, Nullable<int> userID, Nullable<System.DateTime> issuedOn, Nullable<System.DateTime> expiresOn, Nullable<System.DateTime> createdOn)
        {
            var tokenKeyParameter = tokenKey != null ?
                new ObjectParameter("TokenKey", tokenKey) :
                new ObjectParameter("TokenKey", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var issuedOnParameter = issuedOn.HasValue ?
                new ObjectParameter("IssuedOn", issuedOn) :
                new ObjectParameter("IssuedOn", typeof(System.DateTime));
    
            var expiresOnParameter = expiresOn.HasValue ?
                new ObjectParameter("ExpiresOn", expiresOn) :
                new ObjectParameter("ExpiresOn", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_LogToken", tokenKeyParameter, companyIDParameter, userIDParameter, issuedOnParameter, expiresOnParameter, createdOnParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ES_VerifyTokenClient(string clientID)
        {
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ES_VerifyTokenClient", clientIDParameter);
        }
    
        public virtual int INS(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INS", queryParameter);
        }
    
        public virtual int sp_generate_insertscripts(string tABLENAME, string fILTER_CONDITION)
        {
            var tABLENAMEParameter = tABLENAME != null ?
                new ObjectParameter("TABLENAME", tABLENAME) :
                new ObjectParameter("TABLENAME", typeof(string));
    
            var fILTER_CONDITIONParameter = fILTER_CONDITION != null ?
                new ObjectParameter("FILTER_CONDITION", fILTER_CONDITION) :
                new ObjectParameter("FILTER_CONDITION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_generate_insertscripts", tABLENAMEParameter, fILTER_CONDITIONParameter);
        }
    
        public virtual ObjectResult<ES_GetUserScreenActions_Result> ES_GetUserScreenActions(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderBy, string orderByDir, string searchCri, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string rowInsertedBy, Nullable<int> departmentId, Nullable<int> typeId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var orderByDirParameter = orderByDir != null ?
                new ObjectParameter("OrderByDir", orderByDir) :
                new ObjectParameter("OrderByDir", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetUserScreenActions_Result>("ES_GetUserScreenActions", pageNumberParameter, pageSizeParameter, orderByParameter, orderByDirParameter, searchCriParameter, fromDateParameter, toDateParameter, rowInsertedByParameter, departmentIdParameter, typeIdParameter);
        }
    
        public virtual ObjectResult<ES_GetBeneficiaries_Result> ES_GetBeneficiaries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetBeneficiaries_Result>("ES_GetBeneficiaries");
        }
    
        public virtual ObjectResult<ES_GetLkMenu_Result> ES_GetLkMenu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkMenu_Result>("ES_GetLkMenu");
        }
    
        public virtual ObjectResult<ES_GetLkServiceGuideHintTypes_Result> ES_GetLkServiceGuideHintTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLkServiceGuideHintTypes_Result>("ES_GetLkServiceGuideHintTypes");
        }
    
        public virtual ObjectResult<ES_GetServiceGuideConfig_Result> ES_GetServiceGuideConfig()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideConfig_Result>("ES_GetServiceGuideConfig");
        }
    
        public virtual ObjectResult<ES_GetServiceGuideFAQs_Result> ES_GetServiceGuideFAQs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideFAQs_Result>("ES_GetServiceGuideFAQs");
        }
    
        public virtual ObjectResult<ES_GetServiceGuideHintActions_Result> ES_GetServiceGuideHintActions(Nullable<int> hintId)
        {
            var hintIdParameter = hintId.HasValue ?
                new ObjectParameter("HintId", hintId) :
                new ObjectParameter("HintId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideHintActions_Result>("ES_GetServiceGuideHintActions", hintIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceGuideHints_Result> ES_GetServiceGuideHints()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideHints_Result>("ES_GetServiceGuideHints");
        }
    
        public virtual ObjectResult<ES_GetServiceGuideProcedures_Result> ES_GetServiceGuideProcedures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideProcedures_Result>("ES_GetServiceGuideProcedures");
        }
    
        public virtual ObjectResult<Nullable<int>> ES_GetServiceGuideRating(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ES_GetServiceGuideRating", userIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceGuideSupport_Result> ES_GetServiceGuideSupport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideSupport_Result>("ES_GetServiceGuideSupport");
        }
    
        public virtual ObjectResult<ES_GetServiceGuideVideos_Result> ES_GetServiceGuideVideos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideVideos_Result>("ES_GetServiceGuideVideos");
        }
    
        public virtual ObjectResult<ES_GetServiceUserTypes_Result> ES_GetServiceUserTypes(Nullable<int> serviceId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceUserTypes_Result>("ES_GetServiceUserTypes", serviceIdParameter);
        }
    
        public virtual ObjectResult<ES_GetUserServicesActivity_Result> ES_GetUserServicesActivity(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetUserServicesActivity_Result>("ES_GetUserServicesActivity", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> ES_InsertServiceTypes(string descriptionEng, string descriptionAlt, Nullable<int> parentTypeId, string rowInsertedBy, string ipAddress, ObjectParameter typeId)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var parentTypeIdParameter = parentTypeId.HasValue ?
                new ObjectParameter("ParentTypeId", parentTypeId) :
                new ObjectParameter("ParentTypeId", typeof(int));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("ES_InsertServiceTypes", descriptionEngParameter, descriptionAltParameter, parentTypeIdParameter, rowInsertedByParameter, ipAddressParameter, typeId);
        }
    
        public virtual int ES_InsertUserActivityLogging(Nullable<int> categoryId, string logType, string keyword, string username, string userAgent, string userDefined01, string userDefined02, string userDefined03, string rowInsertedBy, string ipAddress, string userType, string loginType)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var logTypeParameter = logType != null ?
                new ObjectParameter("LogType", logType) :
                new ObjectParameter("LogType", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            var userDefined01Parameter = userDefined01 != null ?
                new ObjectParameter("UserDefined01", userDefined01) :
                new ObjectParameter("UserDefined01", typeof(string));
    
            var userDefined02Parameter = userDefined02 != null ?
                new ObjectParameter("UserDefined02", userDefined02) :
                new ObjectParameter("UserDefined02", typeof(string));
    
            var userDefined03Parameter = userDefined03 != null ?
                new ObjectParameter("UserDefined03", userDefined03) :
                new ObjectParameter("UserDefined03", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var loginTypeParameter = loginType != null ?
                new ObjectParameter("LoginType", loginType) :
                new ObjectParameter("LoginType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertUserActivityLogging", categoryIdParameter, logTypeParameter, keywordParameter, usernameParameter, userAgentParameter, userDefined01Parameter, userDefined02Parameter, userDefined03Parameter, rowInsertedByParameter, ipAddressParameter, userTypeParameter, loginTypeParameter);
        }
    
        public virtual int ES_RateServiceGuide(string userId, Nullable<int> rate, string rowInsertedBy, string ipAddress)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(int));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_RateServiceGuide", userIdParameter, rateParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceTypes_Result> ES_GetServiceTypes(Nullable<int> typeId)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceTypes_Result>("ES_GetServiceTypes", typeIdParameter);
        }
    
        public virtual ObjectResult<string> ES_GetAItems()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ES_GetAItems");
        }
    
        public virtual ObjectResult<string> ES_GetAItemsDetails(string serviceId)
        {
            var serviceIdParameter = serviceId != null ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ES_GetAItemsDetails", serviceIdParameter);
        }
    
        public virtual int ES_InsertArisItemDetails(string content, string serviceId, string rowInsertedBy, string ipAddress)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var serviceIdParameter = serviceId != null ?
                new ObjectParameter("serviceId", serviceId) :
                new ObjectParameter("serviceId", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertArisItemDetails", contentParameter, serviceIdParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_InsertArisItems(string content, string rowInsertedBy, string ipAddress)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertArisItems", contentParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<ES_GetLabels_Result> ES_GetLabels(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderBy, string orderByDir, string searchCri, string viewId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var orderByDirParameter = orderByDir != null ?
                new ObjectParameter("OrderByDir", orderByDir) :
                new ObjectParameter("OrderByDir", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var viewIdParameter = viewId != null ?
                new ObjectParameter("ViewId", viewId) :
                new ObjectParameter("ViewId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetLabels_Result>("ES_GetLabels", pageNumberParameter, pageSizeParameter, orderByParameter, orderByDirParameter, searchCriParameter, viewIdParameter);
        }
    
        public virtual ObjectResult<ES_GetUsers_Result> ES_GetUsers(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderBy, string orderByDir, string searchCri, Nullable<short> roleId, Nullable<short> departmentId)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var orderByDirParameter = orderByDir != null ?
                new ObjectParameter("OrderByDir", orderByDir) :
                new ObjectParameter("OrderByDir", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(short));
    
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("DepartmentId", departmentId) :
                new ObjectParameter("DepartmentId", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetUsers_Result>("ES_GetUsers", pageNumberParameter, pageSizeParameter, orderByParameter, orderByDirParameter, searchCriParameter, roleIdParameter, departmentIdParameter);
        }
    
        public virtual ObjectResult<ES_GetKpiByUserType_Result> ES_GetKpiByUserType(Nullable<int> year, string month, Nullable<int> language)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetKpiByUserType_Result>("ES_GetKpiByUserType", yearParameter, monthParameter, languageParameter);
        }
    
        public virtual ObjectResult<ES_GetKpiAverageRating_Result> ES_GetKpiAverageRating(Nullable<int> year, Nullable<int> language)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetKpiAverageRating_Result>("ES_GetKpiAverageRating", yearParameter, languageParameter);
        }
    
        public virtual ObjectResult<ES_GeKpitHitCount_Result> ES_GeKpitHitCount(Nullable<int> year, Nullable<int> language)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GeKpitHitCount_Result>("ES_GeKpitHitCount", yearParameter, languageParameter);
        }
    
        public virtual ObjectResult<ES_GetKpiByServiceType_Result> ES_GetKpiByServiceType(Nullable<int> year, string month, Nullable<int> language)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetKpiByServiceType_Result>("ES_GetKpiByServiceType", yearParameter, monthParameter, languageParameter);
        }
    
        public virtual ObjectResult<ES_GetKpiByKeywords_Result> ES_GetKpiByKeywords(Nullable<int> year, string month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetKpiByKeywords_Result>("ES_GetKpiByKeywords", yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<ES_GetKpiByServices_Result> ES_GetKpiByServices(Nullable<int> year, string month, Nullable<int> language)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var languageParameter = language.HasValue ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetKpiByServices_Result>("ES_GetKpiByServices", yearParameter, monthParameter, languageParameter);
        }
    
        public virtual int ES_HitCounter(string sLID, string ipAddress)
        {
            var sLIDParameter = sLID != null ?
                new ObjectParameter("SLID", sLID) :
                new ObjectParameter("SLID", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_HitCounter", sLIDParameter, ipAddressParameter);
        }
    
        public virtual int ES_ImportArisService(Nullable<int> typeId, string externalServiceID, string descriptionEng, string descriptionAlt, string serviceUrl, string serviceGuid, string nameEng, string nameAlt, string cardUrlEng, string cardUrlAlt, string formUrlEng, string formUrlAlt, string serviceEntities)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceUrlParameter = serviceUrl != null ?
                new ObjectParameter("ServiceUrl", serviceUrl) :
                new ObjectParameter("ServiceUrl", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var nameEngParameter = nameEng != null ?
                new ObjectParameter("NameEng", nameEng) :
                new ObjectParameter("NameEng", typeof(string));
    
            var nameAltParameter = nameAlt != null ?
                new ObjectParameter("NameAlt", nameAlt) :
                new ObjectParameter("NameAlt", typeof(string));
    
            var cardUrlEngParameter = cardUrlEng != null ?
                new ObjectParameter("CardUrlEng", cardUrlEng) :
                new ObjectParameter("CardUrlEng", typeof(string));
    
            var cardUrlAltParameter = cardUrlAlt != null ?
                new ObjectParameter("CardUrlAlt", cardUrlAlt) :
                new ObjectParameter("CardUrlAlt", typeof(string));
    
            var formUrlEngParameter = formUrlEng != null ?
                new ObjectParameter("FormUrlEng", formUrlEng) :
                new ObjectParameter("FormUrlEng", typeof(string));
    
            var formUrlAltParameter = formUrlAlt != null ?
                new ObjectParameter("FormUrlAlt", formUrlAlt) :
                new ObjectParameter("FormUrlAlt", typeof(string));
    
            var serviceEntitiesParameter = serviceEntities != null ?
                new ObjectParameter("ServiceEntities", serviceEntities) :
                new ObjectParameter("ServiceEntities", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisService", typeIdParameter, externalServiceIDParameter, descriptionEngParameter, descriptionAltParameter, serviceUrlParameter, serviceGuidParameter, nameEngParameter, nameAltParameter, cardUrlEngParameter, cardUrlAltParameter, formUrlEngParameter, formUrlAltParameter, serviceEntitiesParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceGuideChannels_Result> ES_GetServiceGuideChannels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideChannels_Result>("ES_GetServiceGuideChannels");
        }
    
        public virtual ObjectResult<ES_GetUserAuthDetails_Result> ES_GetUserAuthDetails(string jwtoken)
        {
            var jwtokenParameter = jwtoken != null ?
                new ObjectParameter("jwtoken", jwtoken) :
                new ObjectParameter("jwtoken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetUserAuthDetails_Result>("ES_GetUserAuthDetails", jwtokenParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceGuideSurveyQueries_Result> ES_GetServiceGuideSurveyQueries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideSurveyQueries_Result>("ES_GetServiceGuideSurveyQueries");
        }
    
        public virtual ObjectResult<ES_GetServiceGuideSurveyQueryOptions_Result> ES_GetServiceGuideSurveyQueryOptions(Nullable<int> qID)
        {
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceGuideSurveyQueryOptions_Result>("ES_GetServiceGuideSurveyQueryOptions", qIDParameter);
        }
    
        public virtual int ES_LogServiceGuideSurveyResponse(Nullable<int> questionId, Nullable<int> optionId, string userId, string ipAddress)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var optionIdParameter = optionId.HasValue ?
                new ObjectParameter("OptionId", optionId) :
                new ObjectParameter("OptionId", typeof(int));
    
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_LogServiceGuideSurveyResponse", questionIdParameter, optionIdParameter, userIdParameter, ipAddressParameter);
        }
    
        [DbFunction("MOFPortalEntities", "ufn_CSVToTable")]
        public virtual IQueryable<string> ufn_CSVToTable(string stringInput, string delimiter)
        {
            var stringInputParameter = stringInput != null ?
                new ObjectParameter("StringInput", stringInput) :
                new ObjectParameter("StringInput", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[MOFPortalEntities].[ufn_CSVToTable](@StringInput, @Delimiter)", stringInputParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<ES_GetBeneficiaryServices_Result> ES_GetBeneficiaryServices(Nullable<int> entityId)
        {
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetBeneficiaryServices_Result>("ES_GetBeneficiaryServices", entityIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceAudience_Result> ES_GetServiceAudience(Nullable<int> serviceId, string serviceGuid)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceAudience_Result>("ES_GetServiceAudience", serviceIdParameter, serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceCategories_Result> ES_GetServiceCategories(Nullable<int> serviceId, Nullable<int> categoryId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceCategories_Result>("ES_GetServiceCategories", serviceIdParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceContact_Result> ES_GetServiceContact(Nullable<int> serviceId, string serviceGuid)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceContact_Result>("ES_GetServiceContact", serviceIdParameter, serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceDepartments_Result> ES_GetServiceDepartments(Nullable<int> serviceId, string serviceGuid)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceDepartments_Result>("ES_GetServiceDepartments", serviceIdParameter, serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceDetails_Result> ES_GetServiceDetails(Nullable<int> serviceId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceDetails_Result>("ES_GetServiceDetails", serviceIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceEntities_Result> ES_GetServiceEntities(Nullable<int> serviceId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceEntities_Result>("ES_GetServiceEntities", serviceIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceFormConfiguration_Result> ES_GetServiceFormConfiguration(Nullable<int> serviceId, Nullable<int> categorId, string externalServiceID, Nullable<int> inputId, string inputControlId)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var categorIdParameter = categorId.HasValue ?
                new ObjectParameter("CategorId", categorId) :
                new ObjectParameter("CategorId", typeof(int));
    
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            var inputIdParameter = inputId.HasValue ?
                new ObjectParameter("InputId", inputId) :
                new ObjectParameter("InputId", typeof(int));
    
            var inputControlIdParameter = inputControlId != null ?
                new ObjectParameter("InputControlId", inputControlId) :
                new ObjectParameter("InputControlId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceFormConfiguration_Result>("ES_GetServiceFormConfiguration", serviceIdParameter, categorIdParameter, externalServiceIDParameter, inputIdParameter, inputControlIdParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceLocations_Result> ES_GetServiceLocations(Nullable<int> serviceId, string serviceGuid)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceLocations_Result>("ES_GetServiceLocations", serviceIdParameter, serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceProcedures_Result> ES_GetServiceProcedures(Nullable<int> serviceId, string serviceGuid)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceProcedures_Result>("ES_GetServiceProcedures", serviceIdParameter, serviceGuidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ES_GetServiceRating(string externalServiceID)
        {
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ES_GetServiceRating", externalServiceIDParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceRequirements_Result> ES_GetServiceRequirements(Nullable<int> serviceId, string serviceGuid)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceRequirements_Result>("ES_GetServiceRequirements", serviceIdParameter, serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServices_Result> ES_GetServices(Nullable<int> serviceId, Nullable<int> entityId, Nullable<int> typeId, string externalServiceID, string searchCri, string userType)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var entityIdParameter = entityId.HasValue ?
                new ObjectParameter("EntityId", entityId) :
                new ObjectParameter("EntityId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServices_Result>("ES_GetServices", serviceIdParameter, entityIdParameter, typeIdParameter, externalServiceIDParameter, searchCriParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<ES_GetServicesList_Result> ES_GetServicesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServicesList_Result>("ES_GetServicesList");
        }
    
        public virtual int ES_DeleteServiceAudience(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceAudience", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceCardEntities(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceCardEntities", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceChannels(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceChannels", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceConditions(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceConditions", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceContact(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceContact", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceDepartments(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceDepartments", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceDocuments(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceDocuments", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceDuration(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceDuration", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceFaqs(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceFaqs", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceFees(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceFees", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceLocations(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceLocations", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceProcedures(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceProcedures", serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceResponsibleOfficer(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceResponsibleOfficer", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetChildServices_Result> ES_GetChildServices(Nullable<int> parentServiceId)
        {
            var parentServiceIdParameter = parentServiceId.HasValue ?
                new ObjectParameter("ParentServiceId", parentServiceId) :
                new ObjectParameter("ParentServiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetChildServices_Result>("ES_GetChildServices", parentServiceIdParameter);
        }
    
        public virtual ObjectResult<ES_GetChildServicesList_Result> ES_GetChildServicesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetChildServicesList_Result>("ES_GetChildServicesList");
        }
    
        public virtual ObjectResult<ES_GetServiceCardEntities_Result> ES_GetServiceCardEntities(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceCardEntities_Result>("ES_GetServiceCardEntities", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceChannels_Result> ES_GetServiceChannels(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceChannels_Result>("ES_GetServiceChannels", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceConditions_Result> ES_GetServiceConditions(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceConditions_Result>("ES_GetServiceConditions", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceDataByGuid_Result> ES_GetServiceDataByGuid(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceDataByGuid_Result>("ES_GetServiceDataByGuid", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceDocuments_Result> ES_GetServiceDocuments(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceDocuments_Result>("ES_GetServiceDocuments", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceDuration_Result> ES_GetServiceDuration(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceDuration_Result>("ES_GetServiceDuration", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceFAQ_Result> ES_GetServiceFAQ(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceFAQ_Result>("ES_GetServiceFAQ", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceFees_Result> ES_GetServiceFees(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceFees_Result>("ES_GetServiceFees", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceResponsibleOfficer_Result> ES_GetServiceResponsibleOfficer(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceResponsibleOfficer_Result>("ES_GetServiceResponsibleOfficer", serviceGuidParameter);
        }
    
        public virtual int ES_ImportArisServiceAudience(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceAudience", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceCardEntities(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceCardEntities", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceChannels(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceChannels", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceConditions(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceConditions", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceContact(string descriptionEng, string descriptionAlt, string phoneNo, string email, string serviceGuid)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceContact", descriptionEngParameter, descriptionAltParameter, phoneNoParameter, emailParameter, serviceGuidParameter);
        }
    
        public virtual int ES_ImportArisServiceDepartments(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceDepartments", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceDocuments(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceDocuments", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceDuration(string descriptionEng, string descriptionAlt, string serviceGuid)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceDuration", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter);
        }
    
        public virtual int ES_ImportArisServiceFaqs(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceFaqs", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceFees(string actualFees, string serviceAmount, string vat, string total, string serviceGuid)
        {
            var actualFeesParameter = actualFees != null ?
                new ObjectParameter("ActualFees", actualFees) :
                new ObjectParameter("ActualFees", typeof(string));
    
            var serviceAmountParameter = serviceAmount != null ?
                new ObjectParameter("ServiceAmount", serviceAmount) :
                new ObjectParameter("ServiceAmount", typeof(string));
    
            var vatParameter = vat != null ?
                new ObjectParameter("Vat", vat) :
                new ObjectParameter("Vat", typeof(string));
    
            var totalParameter = total != null ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceFees", actualFeesParameter, serviceAmountParameter, vatParameter, totalParameter, serviceGuidParameter);
        }
    
        public virtual int ES_ImportArisServiceLocations(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceLocations", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceProcedures(string descriptionEng, string descriptionAlt, string serviceGuid, string lingo)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceProcedures", descriptionEngParameter, descriptionAltParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_ImportArisServiceResponsibleOfficer(string descriptionEng, string descriptionAlt, string phoneNo, string email, string serviceGuid)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            var descriptionAltParameter = descriptionAlt != null ?
                new ObjectParameter("DescriptionAlt", descriptionAlt) :
                new ObjectParameter("DescriptionAlt", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceResponsibleOfficer", descriptionEngParameter, descriptionAltParameter, phoneNoParameter, emailParameter, serviceGuidParameter);
        }
    
        public virtual int ES_DeleteServiceVideos(string serviceGuid)
        {
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteServiceVideos", serviceGuidParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceVideos_Result> ES_GetServiceVideos(Nullable<int> serviceId, string serviceGuid)
        {
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceVideos_Result>("ES_GetServiceVideos", serviceIdParameter, serviceGuidParameter);
        }
    
        public virtual int ES_ImportArisServiceVideos(string name, string thumbnailPicture, string typeOfVideo, string uRL, string serviceGuid, string lingo)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var thumbnailPictureParameter = thumbnailPicture != null ?
                new ObjectParameter("thumbnailPicture", thumbnailPicture) :
                new ObjectParameter("thumbnailPicture", typeof(string));
    
            var typeOfVideoParameter = typeOfVideo != null ?
                new ObjectParameter("typeOfVideo", typeOfVideo) :
                new ObjectParameter("typeOfVideo", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("uRL", uRL) :
                new ObjectParameter("uRL", typeof(string));
    
            var serviceGuidParameter = serviceGuid != null ?
                new ObjectParameter("ServiceGuid", serviceGuid) :
                new ObjectParameter("ServiceGuid", typeof(string));
    
            var lingoParameter = lingo != null ?
                new ObjectParameter("Lingo", lingo) :
                new ObjectParameter("Lingo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_ImportArisServiceVideos", nameParameter, thumbnailPictureParameter, typeOfVideoParameter, uRLParameter, serviceGuidParameter, lingoParameter);
        }
    
        public virtual int ES_DeleteNoActionUsers(string referenceNo, string rowInsertedBy, string ipAddress)
        {
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("ReferenceNo", referenceNo) :
                new ObjectParameter("ReferenceNo", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_DeleteNoActionUsers", referenceNoParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<string> ES_GetLkUserAttributesSSO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ES_GetLkUserAttributesSSO");
        }
    
        public virtual int ES_InsertLkUserAttributesSSO(string descriptionEng)
        {
            var descriptionEngParameter = descriptionEng != null ?
                new ObjectParameter("DescriptionEng", descriptionEng) :
                new ObjectParameter("DescriptionEng", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertLkUserAttributesSSO", descriptionEngParameter);
        }
    
        public virtual int ES_InsertNoActionUserActivities(string referenceNo, string inputControlId, string question, string answer, string rowInsertedBy, string ipAddress)
        {
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("ReferenceNo", referenceNo) :
                new ObjectParameter("ReferenceNo", typeof(string));
    
            var inputControlIdParameter = inputControlId != null ?
                new ObjectParameter("InputControlId", inputControlId) :
                new ObjectParameter("InputControlId", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var rowInsertedByParameter = rowInsertedBy != null ?
                new ObjectParameter("RowInsertedBy", rowInsertedBy) :
                new ObjectParameter("RowInsertedBy", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertNoActionUserActivities", referenceNoParameter, inputControlIdParameter, questionParameter, answerParameter, rowInsertedByParameter, ipAddressParameter);
        }
    
        public virtual int ES_InsertNoActionUsers(string referenceNo, string externalServiceId, Nullable<int> serviceId, Nullable<int> categoryId, string userName, string userType, string ipAddress)
        {
            var referenceNoParameter = referenceNo != null ?
                new ObjectParameter("ReferenceNo", referenceNo) :
                new ObjectParameter("ReferenceNo", typeof(string));
    
            var externalServiceIdParameter = externalServiceId != null ?
                new ObjectParameter("ExternalServiceId", externalServiceId) :
                new ObjectParameter("ExternalServiceId", typeof(string));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("IpAddress", ipAddress) :
                new ObjectParameter("IpAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_InsertNoActionUsers", referenceNoParameter, externalServiceIdParameter, serviceIdParameter, categoryIdParameter, userNameParameter, userTypeParameter, ipAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> ES_IsAnonomysService(string externalServiceID)
        {
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("ES_IsAnonomysService", externalServiceIDParameter);
        }
    
        public virtual int ES_LogRecordsBeforeImport(string externalServiceID)
        {
            var externalServiceIDParameter = externalServiceID != null ?
                new ObjectParameter("ExternalServiceID", externalServiceID) :
                new ObjectParameter("ExternalServiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ES_LogRecordsBeforeImport", externalServiceIDParameter);
        }
    
        public virtual ObjectResult<ES_GetNoActionsData_Result> ES_GetNoActionsData(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderBy, string orderByDir, string searchCri, Nullable<int> typeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var orderByDirParameter = orderByDir != null ?
                new ObjectParameter("OrderByDir", orderByDir) :
                new ObjectParameter("OrderByDir", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetNoActionsData_Result>("ES_GetNoActionsData", pageNumberParameter, pageSizeParameter, orderByParameter, orderByDirParameter, searchCriParameter, typeIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ES_GetNoActionsSummary_Result> ES_GetNoActionsSummary(Nullable<int> pageNumber, Nullable<int> pageSize, Nullable<int> orderBy, string orderByDir, string searchCri, Nullable<int> typeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var orderByDirParameter = orderByDir != null ?
                new ObjectParameter("OrderByDir", orderByDir) :
                new ObjectParameter("OrderByDir", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetNoActionsSummary_Result>("ES_GetNoActionsSummary", pageNumberParameter, pageSizeParameter, orderByParameter, orderByDirParameter, searchCriParameter, typeIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ES_GetServiceTemplatesData_Result> ES_GetServiceTemplatesData(Nullable<int> templateId, string language)
        {
            var templateIdParameter = templateId.HasValue ?
                new ObjectParameter("TemplateId", templateId) :
                new ObjectParameter("TemplateId", typeof(int));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetServiceTemplatesData_Result>("ES_GetServiceTemplatesData", templateIdParameter, languageParameter);
        }
    
        public virtual ObjectResult<ES_GetNoActionsUserData_Result> ES_GetNoActionsUserData(string userName, string searchCri)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var searchCriParameter = searchCri != null ?
                new ObjectParameter("SearchCri", searchCri) :
                new ObjectParameter("SearchCri", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ES_GetNoActionsUserData_Result>("ES_GetNoActionsUserData", userNameParameter, searchCriParameter);
        }
    }
}
